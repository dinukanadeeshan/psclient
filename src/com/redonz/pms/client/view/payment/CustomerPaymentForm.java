/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.redonz.pms.client.view.payment;

import com.redonz.pms.client.connector.ServerConnector;
import com.redonz.pms.client.others.IDGen;
import com.redonz.pms.client.others.Validation;
import com.redonz.pms.client.view.customer.AddCustomerForm;
import com.redonz.pms.client.view.order.MakeInvoiceForm;
import com.redonz.pms.common.controller.HoldOrderController;
import com.redonz.pms.common.model.CustomerOrder;
import com.redonz.pms.common.model.CustomerOrderDetail;
import com.redonz.pms.common.model.HoldOrder;
import com.redonz.pms.common.model.Payment;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.*;

/**
 *
 * @author DI_SH
 */
public class CustomerPaymentForm extends javax.swing.JDialog {

    private int draggingX;
    private int draggingY;
    private int x;
    private int y;
    double total;
    private final NumberFormat currencyInstance;
    private double netAmount;
    private final String orderId;
    private final int i;
    private final CustomerOrder customerOrder;
    private java.awt.Dialog parent;
    private String paymentId;

    /**
     * Creates new form CustomerPaymentForm
     */
    public CustomerPaymentForm(java.awt.Dialog parent, boolean modal, double totalAmount, String orderId, int i, CustomerOrder customerOrder) {
        super(parent, modal);
        this.customerOrder = customerOrder;
        this.parent = parent;
        initComponents();
        setLocationRelativeTo(null);
        total = totalAmount;
        currencyInstance = NumberFormat.getCurrencyInstance(Locale.US);
        String format = currencyInstance.format(total);
        totalAmountTextField.setText(format.substring(1));
        this.x = getX();
        this.y = getY();
        this.orderId = orderId;
        this.i = i;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        totalAmountLabel = new javax.swing.JLabel();
        totalAmountTextField = new javax.swing.JTextField();
        discountTextField = new javax.swing.JTextField();
        discountLabel = new javax.swing.JLabel();
        paymentRecieveTextField = new javax.swing.JTextField();
        paymentLabel = new javax.swing.JLabel();
        balanceTextField = new javax.swing.JTextField();
        balanceLabel = new javax.swing.JLabel();
        netAmountTextField = new javax.swing.JTextField();
        netAmountLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        closeLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        holdButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(235, 235, 235));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });

        totalAmountLabel.setText("Total Amount : ");

        totalAmountTextField.setEditable(false);
        totalAmountTextField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        totalAmountTextField.setFocusable(false);

        discountTextField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        discountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTextFieldActionPerformed(evt);
            }
        });
        discountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountTextFieldKeyReleased(evt);
            }
        });

        discountLabel.setText("Discount : ");

        paymentRecieveTextField.setEditable(false);
        paymentRecieveTextField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        paymentRecieveTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentRecieveTextFieldActionPerformed(evt);
            }
        });
        paymentRecieveTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                paymentRecieveTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymentRecieveTextFieldKeyReleased(evt);
            }
        });

        paymentLabel.setText("Payment Recieved : ");

        balanceTextField.setEditable(false);
        balanceTextField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        balanceTextField.setFocusable(false);

        balanceLabel.setText("Balance :");

        netAmountTextField.setEditable(false);
        netAmountTextField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        netAmountTextField.setFocusable(false);
        netAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netAmountTextFieldActionPerformed(evt);
            }
        });

        netAmountLabel.setText("Net Amount : ");

        confirmButton.setBackground(new java.awt.Color(153, 248, 224));
        confirmButton.setText("Confirm");
        confirmButton.setEnabled(false);
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        confirmButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                confirmButtonKeyReleased(evt);
            }
        });

        closeButton.setBackground(new java.awt.Color(255, 153, 153));
        closeButton.setText("Close");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeButtonMouseExited(evt);
            }
        });
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        closeLabel.setBackground(new java.awt.Color(255, 0, 0));
        closeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        closeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeLabel.setText("X");
        closeLabel.setEnabled(false);
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeLabelMouseExited(evt);
            }
        });

        titleLabel.setBackground(new java.awt.Color(255, 255, 255));
        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(102, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Payment");
        titleLabel.setOpaque(true);

        holdButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        holdButton.setText("Hold Invoice");
        holdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(totalAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(totalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(discountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(netAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(netAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(paymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(paymentRecieveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(balanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(holdButton)
                        .addGap(122, 122, 122)
                        .addComponent(confirmButton)
                        .addGap(6, 6, 6)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(closeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(totalAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(totalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(discountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(netAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(netAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(paymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(paymentRecieveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(balanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmButton)
                            .addComponent(closeButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(holdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        draggingX = evt.getXOnScreen();
        draggingY = evt.getYOnScreen();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int nx = evt.getXOnScreen() - draggingX;
        int ny = evt.getYOnScreen() - draggingY;
        draggingX = evt.getXOnScreen();
        draggingY = evt.getYOnScreen();
        x += nx;
        y += ny;

        setLocation(x, y);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void discountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTextFieldActionPerformed
        String text = discountTextField.getText();
        if (text.isEmpty()) {
            discountTextField.setText("0");
            text = "0";
        }
        double discount = Double.parseDouble(text);
        netAmount = total * (100 - discount) / 100;
        netAmountTextField.setText(currencyInstance.format(netAmount).substring(1));
//       v  try {
//            boolean res = ServerConnector.getServerConnector().getCustomerOrderController().updateOrderDiscount(orderId, discount, netAmount);
//            if (res) {
        paymentRecieveTextField.requestFocus();
        paymentRecieveTextField.setEditable(true);
//            }
//        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(CustomerPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_discountTextFieldActionPerformed

    private void paymentRecieveTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentRecieveTextFieldActionPerformed
        double payment = Double.parseDouble(paymentRecieveTextField.getText());
        double balance = payment - netAmount;
        if (balance >= 0) {
            balanceTextField.setText(currencyInstance.format(balance).substring(1));
        } else {
            balanceTextField.setText(balance + "");
        }
        if ((i == 0 && balance >= 0) || i != 0) {
            confirmButton.requestFocus();
        }
    }//GEN-LAST:event_paymentRecieveTextFieldActionPerformed

    private void confirmButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmButtonKeyReleased
    }//GEN-LAST:event_confirmButtonKeyReleased

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        try {
//            String lastPaymentId = ServerConnector.getServerConnector().getPaymentController().getLastPaymentId();
//            String paymentId = IDGen.getNextId(lastPaymentId != null ? lastPaymentId : "P0000");
            paymentId = ServerConnector.getServerConnector().getPaymentController().getNextPaymentId();

            Payment payment = new Payment(paymentId, orderId, ServerConnector.getServerConnector().getDateController().getCurrentDate(), Double.parseDouble(paymentRecieveTextField.getText()), 0);
//            boolean res = ServerConnector.getServerConnector().getPaymentController().savePayment(payment);
            boolean res = ServerConnector.getServerConnector().getCustomerOrderController().saveCustomerOrder(customerOrder, payment);
            if (res) {
                JOptionPane.showMessageDialog(this, "Saved Successfully....");
                dispose();
                if (parent instanceof MakeInvoiceForm) {
                    ((MakeInvoiceForm) parent).refresh();
                }
            } else {
                ServerConnector.getServerConnector().getPaymentController().releasePaymentId(paymentId);
            }
        } catch (NotBoundException | MalformedURLException | RemoteException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CustomerPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AddCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void netAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netAmountTextFieldActionPerformed

    private void discountTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextFieldKeyReleased
        Validation.validateDiscountText(discountTextField);
    }//GEN-LAST:event_discountTextFieldKeyReleased

    private void confirmButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmButtonKeyPressed
        if (evt.getKeyCode() == 10) {
            confirmButton.doClick();
        }
    }//GEN-LAST:event_confirmButtonKeyPressed

    private void paymentRecieveTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentRecieveTextFieldKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            String text = paymentRecieveTextField.getText();
            System.out.println(text);
            if (!text.isEmpty()) {
                double paymentRecieved = Double.parseDouble(text);

                if (i == 0) {
                    confirmButton.setEnabled(paymentRecieved >= netAmount);
                } else {
                    confirmButton.setEnabled(true);
                    double balance = paymentRecieved - netAmount;

                    if (balance >= 0) {
                        balanceTextField.setText(currencyInstance.format(balance).substring(1));
                    } else {
                        balanceTextField.setText(balance + "");
                    }
                }
            }
        }
    }//GEN-LAST:event_paymentRecieveTextFieldKeyReleased

    private void closeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseEntered
        closeButton.setBackground(new Color(255, 102, 102));
    }//GEN-LAST:event_closeButtonMouseEntered

    private void closeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseExited
        closeButton.setBackground(new Color(255, 153, 153));
    }//GEN-LAST:event_closeButtonMouseExited

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "Payment have not been settled. Do you want to proceed installment payment...?", "", YES_NO_OPTION);
        if (res == YES_OPTION) {
            JOptionPane.showMessageDialog(this, "Select customer....");
            dispose();
        }
        paymentRecieveTextField.requestFocus();
        paymentRecieveTextField.selectAll();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void paymentRecieveTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentRecieveTextFieldKeyPressed
    }//GEN-LAST:event_paymentRecieveTextFieldKeyPressed

    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
        dispose();
    }//GEN-LAST:event_closeLabelMouseClicked

    private void closeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseEntered
        closeLabel.setOpaque(true);
        closeLabel.setForeground(Color.white);
        closeLabel.repaint();
    }//GEN-LAST:event_closeLabelMouseEntered

    private void closeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseExited
        closeLabel.setOpaque(false);
        closeLabel.setForeground(Color.BLACK);
        closeLabel.repaint();
    }//GEN-LAST:event_closeLabelMouseExited

    private void holdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdButtonActionPerformed
        try {
            int res = JOptionPane.showConfirmDialog(this, "Are you sure want to hold...?", "", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                HoldOrderController holdOrderController = ServerConnector.getServerConnector().getHoldOrderController();
                int lastHoldOrderId = holdOrderController.getLastHoldOrderId();
                ArrayList<CustomerOrderDetail> customerOrderDetails = customerOrder.getCustomerOrderDetailList();

                holdOrderController.addHoldOrder(new HoldOrder(lastHoldOrderId + 1, customerOrder.getCustId(), customerOrderDetails));


                dispose();
                if (parent instanceof MakeInvoiceForm) {
                    ((MakeInvoiceForm) parent).refresh();
                }

            }
        } catch (RemoteException | NotBoundException | MalformedURLException ex) {
            Logger.getLogger(CustomerPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_holdButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerPaymentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerPaymentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerPaymentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerPaymentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomerPaymentForm dialog = new CustomerPaymentForm(new javax.swing.JDialog(), true, 1000, "O0001", 0, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JTextField balanceTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JTextField discountTextField;
    private javax.swing.JButton holdButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel netAmountLabel;
    private javax.swing.JTextField netAmountTextField;
    private javax.swing.JLabel paymentLabel;
    private javax.swing.JTextField paymentRecieveTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel totalAmountLabel;
    private javax.swing.JTextField totalAmountTextField;
    // End of variables declaration//GEN-END:variables
}
